"""
–û–ø—Ç–∏–º–∏–∑–∞—Ç–æ—Ä –≤–æ–ª–Ω –º–∏–≥—Ä–∞—Ü–∏–∏ –ü–û –Ω–∞ Linux
Streamlit –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∏ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–∏ —Ä–∞–±–æ—á–∏—Ö —Å—Ç–∞–Ω—Ü–∏–π
"""

import streamlit as st
import pandas as pd
import io
from typing import Dict, Set, Tuple, List
from optimizer import MigrationOptimizer
from data_processor import DataProcessor
from exporter import Exporter
from tabs import tabs
# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="–û–ø—Ç–∏–º–∏–∑–∞—Ç–æ—Ä –º–∏–≥—Ä–∞—Ü–∏–∏ –ü–û",
    page_icon="üêß",
    layout="wide"
)

st.title("üêß –û–ø—Ç–∏–º–∏–∑–∞—Ç–æ—Ä –≤–æ–ª–Ω –º–∏–≥—Ä–∞—Ü–∏–∏ –ü–û –Ω–∞ Linux")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è session_state
if 'data_loaded' not in st.session_state:
    st.session_state.data_loaded = False
if 'optimizer' not in st.session_state:
    st.session_state.optimizer = None
if 'processor' not in st.session_state:
    st.session_state.processor = None
if 'exporter' not in st.session_state:
    st.session_state.exporter = None

# Sidebar –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
with st.sidebar:
    st.header("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")

    # –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤
    st.subheader("1. –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö")
    
    uploaded_file = st.file_uploader(
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏",
        type=['xlsx', 'xls', 'csv'],
        help="–§–∞–π–ª –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Å—Ç–æ–ª–±—Ü—ã —Å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º–∏ –∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–º –ü–û",
        key="users_file"
    )
    
    tested_software_file = st.file_uploader(
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª —Å –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –ü–û (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)",
        type=['xlsx', 'xls', 'csv'],
        help="–§–∞–π–ª —Å–æ —Å–ø–∏—Å–∫–æ–º —É–∂–µ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ü–û. –†–∞—Å—á—ë—Ç –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω –±–µ–∑ —É—á—ë—Ç–∞ —É–∂–µ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ü–û, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–º, –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –ü–û –∏–ª–∏ –Ω–µ—Ç, –±—É–¥–µ—Ç –ø—Ä–æ—Å—Ç–æ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∞ –Ω–∞ —ç—Ç–∞–ø–µ —ç–∫—Å–ø–æ—Ä—Ç–∞.",
        key="tested_software_file"
    )
    
    # –í—ã–±–æ—Ä —Å—Ç–æ–ª–±—Ü–æ–≤ –¥–ª—è —Ñ–∞–π–ª–∞ —Å –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –ü–û (–µ—Å–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω)
    tested_software_column = None
    tested_status_column = None
    if tested_software_file is not None:
        st.subheader("–í—ã–±–æ—Ä —Å—Ç–æ–ª–±—Ü–æ–≤ —Ñ–∞–π–ª–∞ —Å –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –ü–û")
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å—Ç–æ–ª–±—Ü–æ–≤
        if tested_software_file.name.endswith('.csv'):
            tested_df_preview = pd.read_csv(tested_software_file, encoding='utf-8-sig')
        else:
            # –ü—ã—Ç–∞–µ–º—Å—è –ø—Ä–æ—á–∏—Ç–∞—Ç—å –ª–∏—Å—Ç "–ü–û", –µ—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω - —á–∏—Ç–∞–µ–º –ø–µ—Ä–≤—ã–π –ª–∏—Å—Ç
            try:
                tested_df_preview = pd.read_excel(tested_software_file, sheet_name='–ü–û')
            except:
                tested_df_preview = pd.read_excel(tested_software_file)
        
        st.success(f"‚úì –§–∞–π–ª —Å –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –ü–û –∑–∞–≥—Ä—É–∂–µ–Ω: {tested_software_file.name}")
        
        tested_columns = tested_df_preview.columns.tolist()
        
        tested_software_column = st.selectbox(
            "–°—Ç–æ–ª–±–µ—Ü —Å –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ–º –ü–û",
            options=tested_columns,
            index=tested_columns.index("–ü—Ä–æ–≥—Ä–∞–º–º–Ω–æ–µ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏–µ")
                if "–ü—Ä–æ–≥—Ä–∞–º–º–Ω–æ–µ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏–µ" in tested_columns 
                else (tested_columns.index("–ü–û –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è") if "–ü–û –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è" in tested_columns else 0),
            help="–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –≤ —Ñ–∞–π–ª–µ —Å –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –ü–û",
            key="software_column_tested"
        )
        
        tested_status_column = st.selectbox(
            "–°—Ç–æ–ª–±–µ—Ü —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è",
            options=tested_columns,
            index=tested_columns.index("–ü–û –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–æ")
                if "–ü–û –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–æ" in tested_columns 
                else (tested_columns.index("–°—Ç–∞—Ç—É—Å") if "–°—Ç–∞—Ç—É—Å" in tested_columns else 0),
            help="–°—Ç–æ–ª–±–µ—Ü, —É–∫–∞–∑—ã–≤–∞—é—â–∏–π, –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–æ",
            key="status_column_tested"
        )
        
        # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ü–û –≤ –ë–î
        if st.button("üóÑÔ∏è –ó–∞–≥—Ä—É–∑–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ü–û –≤ –ë–î", key="export_tested_software_db_sidebar", type="primary"):
            # –°–æ–∑–¥–∞–µ–º DataFrame —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º–∏ —Å—Ç–æ–ª–±—Ü–∞–º–∏
            tested_df_clean = tested_df_preview[[tested_software_column, tested_status_column]].dropna(subset=[tested_software_column])
            
            # –°–æ–∑–¥–∞–µ–º Excel –±—É—Ñ–µ—Ä
            import io
            excel_buffer = io.BytesIO()
            with pd.ExcelWriter(excel_buffer, engine='openpyxl') as writer:
                tested_df_clean.to_excel(writer, sheet_name='–ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ü–û', index=False)
            excel_buffer.seek(0)
            st.session_state.excel_buffer_tested_software = excel_buffer
            
            # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
            from modal_db import show_db_export_modal
            import os
            from dotenv import load_dotenv
            
            # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
            load_dotenv()
            
            # Callback –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞
            def export_callback(excel_buffer, schema, table, user, password, if_exists):
                from exporter import Exporter
                host = os.getenv('DB_HOST', 'localhost')
                port = os.getenv('DB_PORT', '5432')
                database = os.getenv('DB_NAME', 'postgres')
                Exporter.export_excel_to_database(
                    excel_buffer=excel_buffer,
                    schema=schema,
                    table=table,
                    user=user,
                    password=password,
                    host=host,
                    port=port,
                    database=database,
                    if_exists=if_exists
                )
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
            default_schema = os.getenv('DB_SCHEMA', 'public')
            show_db_export_modal(
                excel_buffer=st.session_state.excel_buffer_tested_software,
                filename="tested_software.xlsx",
                on_export_callback=export_callback,
                default_schema=default_schema
            )

    if uploaded_file:
        try:
            # –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
            if uploaded_file.name.endswith('.csv'):
                df = pd.read_csv(uploaded_file, encoding='utf-8-sig')
            else:
                df = pd.read_excel(uploaded_file)

            st.success(f"‚úì –§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω: {uploaded_file.name}")
            st.info(f"–°—Ç—Ä–æ–∫: {len(df)}")

            # –í—ã–±–æ—Ä —Å—Ç–æ–ª–±—Ü–æ–≤ –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
            st.subheader("–í—ã–±–æ—Ä —Å—Ç–æ–ª–±—Ü–æ–≤ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ñ–∞–π–ª–∞")

            columns = df.columns.tolist()

            arm_column = st.selectbox(
                "–°—Ç–æ–ª–±–µ—Ü —Å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ–º/–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º",
                options=columns,
                index=columns.index("–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ.–°–µ—Ç–µ–≤–æ–µ –ò–º—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ (—É—Å—Ç-–≤–æ, —Ö–æ—Å—Ç)")
                    if "–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ.–°–µ—Ç–µ–≤–æ–µ –ò–º—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ (—É—Å—Ç-–≤–æ, —Ö–æ—Å—Ç)" in columns else 0,
                help="–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ä–∞–±–æ—á–µ–π —Å—Ç–∞–Ω—Ü–∏–∏ –∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
                key="arm_column_main"
            )

            software_column = st.selectbox(
                "–°—Ç–æ–ª–±–µ—Ü —Å –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ–º –ü–û",
                options=columns,
                index=columns.index("–ü—Ä–æ–≥—Ä–∞–º–º–Ω–æ–µ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏–µ")
                    if "–ü—Ä–æ–≥—Ä–∞–º–º–Ω–æ–µ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏–µ" in columns else 0,
                help="–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è",
                key="software_column_main"
            )
            
            # –ï—Å–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω —Ñ–∞–π–ª —Å –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –ü–û, –Ω—É–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å —Å—Ç–æ–ª–±–µ—Ü —Å —Å–µ–º–µ–π—Å—Ç–≤–æ–º –ü–û –¥–ª—è –º–∞–ø–ø–∏–Ω–≥–∞
            software_family_column = None
            if tested_software_file is not None:
                software_family_column = st.selectbox(
                    "–°—Ç–æ–ª–±–µ—Ü —Å —Å–µ–º–µ–π—Å—Ç–≤–æ–º –ü–û (–¥–ª—è –º–∞–ø–ø–∏–Ω–≥–∞ —Å –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –ü–û)",
                    options=columns,
                    index=2 if len(columns) > 2 else 0,  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ç—Ä–µ—Ç–∏–π —Å—Ç–æ–ª–±–µ—Ü (–∏–Ω–¥–µ–∫—Å 2)
                    help="–°—Ç–æ–ª–±–µ—Ü —Å —Å–µ–º–µ–π—Å—Ç–≤–æ–º –ü–û, –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ—Ç–æ—Ä–æ–≥–æ —Å–æ–≤–ø–∞–¥–∞—é—Ç —Å ascupo_name –≤ —Ñ–∞–π–ª–µ –º–∞–ø–ø–∏–Ω–≥–∞",
                    key="software_family_column_main"
                )
            
            # –ö–Ω–æ–ø–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö
            if st.button("üìä –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –¥–∞–Ω–Ω—ã–µ", type="primary", width="stretch"):
                with st.spinner("–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö..."):
                    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
                    processor = DataProcessor(df, arm_column, software_column)
                    processor.process()

                    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–∞ —Å –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –ü–û (–µ—Å–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω)
                    if tested_software_file is not None and tested_software_column is not None and tested_status_column is not None:
                        try:
                            # –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞ —Å –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –ü–û
                            if tested_software_file.name.endswith('.csv'):
                                tested_df = pd.read_csv(tested_software_file, encoding='utf-8-sig')
                            else:
                                # –ü—ã—Ç–∞–µ–º—Å—è –ø—Ä–æ—á–∏—Ç–∞—Ç—å –ª–∏—Å—Ç "–ü–û", –µ—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω - —á–∏—Ç–∞–µ–º –ø–µ—Ä–≤—ã–π –ª–∏—Å—Ç
                                try:
                                    tested_df = pd.read_excel(tested_software_file, sheet_name='–ü–û')
                                except:
                                    tested_df = pd.read_excel(tested_software_file)
                            
                            # –û—Å—Ç–∞–≤–ª—è–µ–º –í–°–ï —Å—Ç–æ–ª–±—Ü—ã –∏ —É–±–∏—Ä–∞–µ–º —Å—Ç—Ä–æ–∫–∏ —Å –ø—É—Å—Ç—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –≤ —Å—Ç–æ–ª–±—Ü–µ –ü–û
                            tested_df_clean = tested_df.dropna(subset=[tested_software_column])
                            
                            st.session_state.tested_software_df = tested_df_clean
                            st.session_state.tested_software_column = tested_software_column
                            st.session_state.tested_status_column = tested_status_column
                            st.session_state.tested_software_file_name = tested_software_file.name
                            st.session_state.software_family_column = software_family_column
                            
                        except Exception as e:
                            st.warning(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞ —Å –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –ü–û: {e}")
                            st.session_state.tested_software_df = None
                            st.session_state.tested_software_column = None
                            st.session_state.tested_status_column = None
                            st.session_state.tested_software_file_name = None
                            st.session_state.software_family_column = None
                    else:
                        st.session_state.tested_software_df = None
                        st.session_state.tested_software_column = None
                        st.session_state.tested_status_column = None
                        st.session_state.tested_software_file_name = None
                        st.session_state.software_family_column = None

                    st.session_state.processor = processor
                    st.session_state.data_loaded = True
                    st.session_state.optimizer = MigrationOptimizer(processor)
                    st.session_state.exporter = Exporter(processor)

                    st.success("‚úì –î–∞–Ω–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã!")
                    st.rerun()

        except Exception as e:
            st.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞: {e}")

# –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç
if st.session_state.data_loaded:
    processor = st.session_state.processor
    optimizer = st.session_state.optimizer
    exporter = st.session_state.exporter

    # –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    st.header("üìà –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
    col1, col2, col3, col4 = st.columns(4)

    with col1:
        st.metric("–í—Å–µ–≥–æ –ê–†–ú", processor.total_arms)
    with col2:
        st.metric("–£–Ω–∏–∫–∞–ª—å–Ω–æ–µ –ü–û", processor.total_software)
    with col3:
        st.metric("–£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –Ω–∞–±–æ—Ä–æ–≤ –ü–û", len(processor.set_to_arms_map))
    with col4:
        avg_software = sum(len(s) for s in processor.arm_software_map.values()) / len(processor.arm_software_map)
        st.metric("–°—Ä–µ–¥–Ω–µ–µ –ü–û –Ω–∞ –ê–†–ú", f"{avg_software:.1f}")
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –ü–û
    if 'tested_software_file_name' in st.session_state and st.session_state.tested_software_file_name is not None:
        tested_count = len(st.session_state.tested_software_df) if 'tested_software_df' in st.session_state and st.session_state.tested_software_df is not None else 0
        st.info(f"üìã –ó–∞–≥—Ä—É–∂–µ–Ω —Ñ–∞–π–ª —Å –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –ü–û: **{st.session_state.tested_software_file_name}** ({tested_count} –ü–û)")

    # –í–∫–ª–∞–¥–∫–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ä–µ–∂–∏–º–æ–≤
    tab1, tab2, tab3, tab4 = st.tabs([
        "üéØ –†—É—á–Ω–æ–π —Ä–µ–∂–∏–º (—ç–≤—Ä–∏—Å—Ç–∏–∫–∞)", 
        "üî¨ –†—É—á–Ω–æ–π —Ä–µ–∂–∏–º (—Ç–æ—á–Ω—ã–π)", 
        "üë• –ú–∏–≥—Ä–∞—Ü–∏—è N –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (—ç–≤—Ä–∏—Å—Ç–∏–∫–∞)",
        "üî¨ –ú–∏–≥—Ä–∞—Ü–∏—è N –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (—Ç–æ—á–Ω—ã–π)"
    ])

    tabs(tab1, tab2, tab3, tab4, st, processor, optimizer, uploaded_file, exporter)

   

else:
    # –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã
    st.info("üëà –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª —Å –¥–∞–Ω–Ω—ã–º–∏ –≤ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏ –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã")

    st.markdown("""
    ### –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:

    1. **–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª** - Excel (.xlsx, .xls) –∏–ª–∏ CSV —Å –¥–∞–Ω–Ω—ã–º–∏ –æ–± —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–º –ü–û
    2. **–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–æ–ª–±—Ü—ã** - —É–∫–∞–∂–∏—Ç–µ —Å—Ç–æ–ª–±–µ—Ü —Å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º–∏ –∏ —Å—Ç–æ–ª–±–µ—Ü —Å –ü–û
    3. **–û–±—Ä–∞–±–æ—Ç–∞–π—Ç–µ –¥–∞–Ω–Ω—ã–µ** - –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
    4. **–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º**:
       - **–†—É—á–Ω–æ–π (—ç–≤—Ä–∏—Å—Ç–∏–∫–∞)** - –±—ã—Å—Ç—Ä—ã–π —Ä–∞—Å—á–µ—Ç –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã—Ö –≤–æ–ª–Ω
       - **–†—É—á–Ω–æ–π (—Ç–æ—á–Ω—ã–π)** - –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ —á–µ—Ä–µ–∑ —Ü–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω–æ–µ –ª–∏–Ω–µ–π–Ω–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ (ILP) - –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –¥–æ–ª—å—à–µ, –Ω–æ –¥–∞–µ—Ç –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –ª—É—á—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç. –ï—Å–ª–∏ –æ–≥—Ä–∞–Ω–∏—á–∏—Ç—å –ø–æ –≤—Ä–µ–º–µ–Ω–∏, —Ç–æ –≤–µ—Ä–Ω–µ—Ç –Ω–∞–∏–ª—É—á—à–µ–µ –ø—Ä–∏–±–ª–∏–∂–µ–Ω–∏–µ –∫ –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–º—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É.
       - **–ú–∏–≥—Ä–∞—Ü–∏—è N –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (—ç–≤—Ä–∏—Å—Ç–∏–∫–∞)** - –±—ã—Å—Ç—Ä—ã–π –ø–æ–∏—Å–∫ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ –ü–û
       - **–ú–∏–≥—Ä–∞—Ü–∏—è N –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (—Ç–æ—á–Ω—ã–π)** - –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–π –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –Ω–∞–±–æ—Ä –ü–û —á–µ—Ä–µ–∑ —Ü–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω–æ–µ –ª–∏–Ω–µ–π–Ω–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ (ILP) - —Ä–∞–±–æ—Ç–∞–µ—Ç –¥–æ–ª–≥–æ (–≤ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö 5-15 –º–∏–Ω—É—Ç), –Ω–æ –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –¥–∞–µ—Ç –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç. –ï—Å–ª–∏ –æ–≥—Ä–∞–Ω–∏—á–∏—Ç—å –ø–æ –≤—Ä–µ–º–µ–Ω–∏, —Ç–æ –≤–µ—Ä–Ω–µ—Ç –Ω–∞–∏–ª—É—á—à–µ–µ –ø—Ä–∏–±–ª–∏–∂–µ–Ω–∏–µ –∫ –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–º—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É.
    5. **–≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã** - —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –ø–ª–∞–Ω –º–∏–≥—Ä–∞—Ü–∏–∏ –≤ Excel

    ### üìä –§–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö:

    **–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —Ñ–∞–π–ª—É:**
    - –§–∞–π–ª –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º –¥–≤–∞ —Å—Ç–æ–ª–±—Ü–∞:
      - **–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞/–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è** (–Ω–∞–ø—Ä–∏–º–µ—Ä: "–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ", "–ö–æ–º–ø—å—é—Ç–µ—Ä")
      - **–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ –ü–û** (–Ω–∞–ø—Ä–∏–º–µ—Ä: "–ü—Ä–æ–≥—Ä–∞–º–º–Ω–æ–µ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏–µ", "–ü–û")
    - –í—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å—Ç–æ–ª–±—Ü—ã –±—É–¥—É—Ç –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω—ã –∏ –ø—Ä–æ—Å—Ç–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –∏—Ç–æ–≥–æ–≤—ã–π —Ñ–∞–π–ª.
    
    **–ü—Ä–∏–º–µ—Ä —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã:**
    
    | –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ | –ü—Ä–æ–≥—Ä–∞–º–º–Ω–æ–µ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏–µ |
    |------------|-------------------------|
    | PC-001     | Microsoft Office 2016   |
    | PC-001     | Google Chrome           |
    | PC-001     | Adobe Acrobat Reader    |
    | PC-002     | Microsoft Office 2016   |
    | PC-002     | VLC Media Player        |
    | PC-002     | 7-Zip                   |
    | PC-003     | Google Chrome           |
    | PC-003     | VLC Media Player        |
    
    ‚ö†Ô∏è **–í–∞–∂–Ω–æ:** –ö–∞–∂–¥–∞—è —Å—Ç—Ä–æ–∫–∞ = –æ–¥–Ω–∞ —Å–≤—è–∑–∫–∞ "–ê–†–ú ‚Üî –ü–û". –ï—Å–ª–∏ —É –ê–†–ú–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ 5 –ø—Ä–æ–≥—Ä–∞–º–º, –≤ —Ç–∞–±–ª–∏—Ü–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 5 —Å—Ç—Ä–æ–∫ –¥–ª—è —ç—Ç–æ–≥–æ –ê–†–ú–∞.
    """)